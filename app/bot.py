import telebot
from telebot import types

bot = telebot.TeleBot("")

users_list = ["–ê–ª–µ–∫—Å–µ–π", "–ú–∞—Ä–∏—è", "–ò–≤–∞–Ω"]
users_set = {"–ê–ª–µ–∫—Å–µ–π", "–ú–∞—Ä–∏—è", "–ò–≤–∞–Ω"}
users_dict = {1: "–ê–ª–µ–∫—Å–µ–π", 2: "–ú–∞—Ä–∏—è", 3: "–ò–≤–∞–Ω"}

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_list = types.KeyboardButton("üìã –°–ø–∏—Å–æ–∫")
    btn_set = types.KeyboardButton("‚ú® –ú–Ω–æ–∂–µ—Å—Ç–≤–æ")
    btn_dict = types.KeyboardButton("üìñ –°–ª–æ–≤–∞—Ä—å")
    markup.add(btn_list, btn_set, btn_dict)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ["üìã –°–ø–∏—Å–æ–∫", "‚ú® –ú–Ω–æ–∂–µ—Å—Ç–≤–æ", "üìñ –°–ª–æ–≤–∞—Ä—å"])
def handle_buttons(message):
    if message.text == "üìã –°–ø–∏—Å–æ–∫":
        bot.send_message(message.chat.id, f"–°–ø–∏—Å–æ–∫: {users_list}\n–ö–æ–º–∞–Ω–¥—ã:\n/add_list [–∏–º—è]\n/remove_list [–∏–º—è]")
    elif message.text == "‚ú® –ú–Ω–æ–∂–µ—Å—Ç–≤–æ":
        bot.send_message(message.chat.id, f"–ú–Ω–æ–∂–µ—Å—Ç–≤–æ: {users_set}\n–ö–æ–º–∞–Ω–¥—ã:\n/add_set [–∏–º—è]\n/remove_set [–∏–º—è]")
    elif message.text == "üìñ –°–ª–æ–≤–∞—Ä—å":
        bot.send_message(message.chat.id, f"–°–ª–æ–≤–∞—Ä—å: {users_dict}\n–ö–æ–º–∞–Ω–¥—ã:\n/add_dict [id] [–∏–º—è]\n/remove_dict [id]")

@bot.message_handler(commands=['add_list'])
def add_list(message):
    try:
        name = message.text.split()[1]
        users_list.append(name)
        bot.reply_to(message, f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {name}. –¢–µ–ø–µ—Ä—å —Å–ø–∏—Å–æ–∫: {users_list}")
    except IndexError:
        bot.reply_to(message, "–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏ –∏–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /add_list –ê–Ω–Ω–∞")

@bot.message_handler(commands=['remove_list'])
def remove_list(message):
    try:
        name = message.text.split()[1]
        users_list.remove(name)
        bot.reply_to(message, f"–£–¥–∞–ª–µ–Ω–æ: {name}. –¢–µ–ø–µ—Ä—å —Å–ø–∏—Å–æ–∫: {users_list}")
    except (IndexError, ValueError):
        bot.reply_to(message, "–û—à–∏–±–∫–∞: –∏–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")

@bot.message_handler(commands=['add_set'])
def add_set(message):
    try:
        name = message.text.split()[1]
        users_set.add(name)
        bot.reply_to(message, f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {name}. –¢–µ–ø–µ—Ä—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ: {users_set}")
    except IndexError:
        bot.reply_to(message, "–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏ –∏–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /add_set –ê–Ω–Ω–∞")

@bot.message_handler(commands=['remove_set'])
def remove_set(message):
    try:
        name = message.text.split()[1]
        users_set.remove(name)
        bot.reply_to(message, f"–£–¥–∞–ª–µ–Ω–æ: {name}. –¢–µ–ø–µ—Ä—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ: {users_set}")
    except (IndexError, KeyError):
        bot.reply_to(message, "–û—à–∏–±–∫–∞: –∏–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")

@bot.message_handler(commands=['add_dict'])
def add_dict(message):
    try:
        _, id_, name = message.text.split(maxsplit=2)  # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ 3 —á–∞—Å—Ç–∏
        users_dict[int(id_)] = name
        bot.reply_to(message, f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {name} (ID: {id_}). –¢–µ–ø–µ—Ä—å —Å–ª–æ–≤–∞—Ä—å: {users_dict}")
    except (IndexError, ValueError):
        bot.reply_to(message, "–û—à–∏–±–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π /add_dict [id] [–∏–º—è]")

@bot.message_handler(commands=['remove_dict'])
def remove_dict(message):
    try:
        id_ = message.text.split()[1]
        name = users_dict.pop(int(id_))
        bot.reply_to(message, f"–£–¥–∞–ª–µ–Ω–æ: {name} (ID: {id_}). –¢–µ–ø–µ—Ä—å —Å–ª–æ–≤–∞—Ä—å: {users_dict}")
    except (IndexError, KeyError):
        bot.reply_to(message, "–û—à–∏–±–∫–∞: ID –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω")

bot.polling()
